<?php

/**
 * @file
 * Handle Feedback types
 */

/**
 * Implements hook_help().
 */
function asu_feedback_help($path, $arg) {
  switch ($path) {
    case 'admin/help#asu_feedback':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $path = drupal_get_path('module', 'asu_feedback');
      $file_handle = fopen($path . "/README.txt", "r");
      while (!feof($file_handle)) {
        $line = fgets($file_handle);
        $output .= $line . '<br />';
      }
      fclose($file_handle);
      return $output;

    case 'admin/config/asu_feedback':
      $output = '<p>' . t('ASU Feedback Moulde description goes here. Learn more on the <a href="@asufeedbackhelp">ASU Feedback module help page</a>.', array('@asufeedbackhelp' => url('admin/help/asu_feedback'))) . '</p>';
      return $output;
  }
}


/**
 * Implements hook_menu().
 */
function asu_feedback_menu() {
  return array(
    'admin/config/asu_feedback' => array(
      'title' => 'ASU Feedback',
      'description' => 'Configure visibility of feedback options',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('asu_feedback_admin_settings'),
      'access arguments' => array('administer feedback settings'),
     'file' => 'asu_feedback.admin.inc',
    ),
  );
}


/**
 * Implements hook_permission().
 */
function asu_feedback_permission() {
  $perms['administer feedback settings'] = array(
    'title' => t('Administer feedback settings'),
    'restrict access' => TRUE,
  );
  $perms['give feedback'] = array(
    'title' => t('Give feedback'),
    'restrict access' => TRUE,
  );
  return $perms;
}


/**
 * Implements hook_init().
 */
function asu_feedback_init() {
    $path = drupal_get_path('module', 'asu_feedback');
    drupal_add_css($path . '/asu_feedback.css');
    drupal_add_library('cluetip', 'cluetip');
    drupal_add_js($path . '/asu_feedback.js');
}

/**
 * Implements hook_page_build().
 */
function asu_feedback_page_build(&$page) {
  if (isset($page['content']['system_main']['nodes'])) {
    $help_nid = 'node/' . key($page['content']['system_main']['nodes']);
    $help = current($page['content']['system_main']['nodes']);
    if (isset($help['asu_feedback_help'])) {
      $help_link = $help['asu_feedback_help']['#items'][0]['display_url'];
      $buttons = array(
        0 => array(
          'fid' => 3,
          'title' => 'Help',
          'url' => $help_link,
          'visibility' => 1,
          'paths' => $help_nid,
        ),
      );
    }
  }
  $buttons[] = array(
       'fid' => 1,
       'title' => 'Leave Feedback',
       'url' => 'feedback',
       'visibility' => variable_get('asu_feedback_visibility', ''),
       'paths' => variable_get('asu_feedback_paths', ''),
  );
  $buttons[] = array(
    'fid' => 2,
    'title' => 'Request Access',
    'url' => 'request-access',
    'visibility' => variable_get('asu_feedback_access_visibility', ''),
    'paths' => variable_get('asu_feedback_access', ''),
  );

  $i = 0;
  $links = array();
  $items = array();
  $class = 'asu-feedback';
  $cas = '';
  if (!user_is_logged_in()) {
    $cas = 'cas?destination=';
  }
  foreach ($buttons as $b) {
    $options = array('');
    $url = $b['url'];
    if (asu_feedback_match_path($b['paths'], $b['visibility'])) {
      $li_class = array($i => $class . '-' . $b['fid']);
      if ($b['fid'] != 3) {
        global $base_path;
        $proto = 'https://';
        $host = $_SERVER['SERVER_NAME'];
        $port = ($_SERVER['SERVER_PORT'] == 80 ? '' : ':' . $_SERVER['SERVER_PORT']);
        $base_url = $proto . $host . $port . $base_path;
        $url = $base_url . $cas . $b['url'] . '?refer=' . $base_url . urlencode(drupal_get_path_alias($_GET['q']));

        $options = array(
          'attributes' => array('target' => '_blank'),
        );
      }
        $links[] =  l($b['title'], $url, $options);
        $items[] = array(
          'data' => $links[$i],
          'class' => $li_class);

      $i++;
    }
  }

  if ($i == 0) {
    return FALSE;
  }

  $output = theme('item_list', array('items' => $items, 'attributes' => array('class' =>  $class) ));

  $page['content']['asu_feedback'] = array(
    '#title' => t('Feedback'),
    '#markup' => $output,
    '#prefix' => '<div id="asu-feedback-button" class="block"><span class="' . $class . '-cluetip"' . ' rel="#' . $class . '-tooltip"></span></div><div id="' . $class . '-tooltip">',
    '#suffix' => '</div>',
  );

}

/**
 * Check if the current path matches any pattern in a set of patterns.
 *
 * @param $patterns
 *   String containing a set of patterns separated by \n, \r or \r\n.
 *
 * @param $visibility
 *   1 to include paths, 0 to exclude paths
 *
 * @return
 *   Boolean value: TRUE if the current path or alias matches a pattern.
 */
function asu_feedback_match_path($patterns, $visibility) {
  // Convert path to lowercase. This allows comparison of the same path
  // with different case. Ex: /Page, /page, /PAGE.
  $patterns = drupal_strtolower($patterns);

  // Convert the current path to lowercase.
  $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));

  // Compare the lowercase internal and lowercase path alias (if any).
  $page_match = drupal_match_path($path, $patterns);
  if ($path != $_GET['q']) {
    $page_match = $page_match || drupal_match_path($_GET['q'], $patterns);
  }

  if (($visibility) && ($page_match)) {
    return 1;
  }
  elseif (($visibility == 0) && ($page_match == 0)) {
    return 1;
  }
  else {
    return 0;
  }
}

